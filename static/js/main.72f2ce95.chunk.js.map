{"version":3,"sources":["Profile/Profile.module.scss","Statistics/statisticalData.module.scss","FriendList/friends.module.scss","TransactionHistory/TransactionHistory.module.scss","Profile/Profile.js","Statistics/randColor.js","Statistics/Statistics.js","FriendList/FriendListItem.js","FriendList/FriendList.js","TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","descriptioImg","src","alt","profileName","profileList","profileItem","profileListSpam","followers","views","likes","randColor","r","Math","floor","random","g","b","toString","Function","defaultProps","statisticalData","title","statistics","statList","map","label","percentage","id","item","style","backgroundColor","FriendListItem","friends","isOnline","status","statusFalse","width","TransactionHistory","items","type","amount","currency","App","userinformation","Statistics","FriendList","transactions","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,gBAAkB,iCAAiC,cAAgB,+BAA+B,YAAc,+B,gBCAhND,EAAOC,QAAU,CAAC,SAAW,kCAAkC,KAAO,8BAA8B,MAAQ,+BAA+B,WAAa,oCAAoC,MAAQ,+BAA+B,WAAa,sC,4PCAhPD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,wBAAwB,YAAc,+B,s4BCA5JD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,UAAU,oCAAoC,MAAQ,kCAAkC,KAAO,mC,8nECiDtKC,EA/CC,SAAC,GAAD,IACdC,EADc,EACdA,KACAC,EAFc,EAEdA,IACAC,EAHc,EAGdA,SAHc,IAIdC,cAJc,MAIL,kEAJK,EAKdC,EALc,EAKdA,MALc,OAOd,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,gCACE,qBACEF,UAAWC,IAAOE,cAClBC,IAAKN,EACLO,IAAI,kHAEN,mBAAGL,UAAWC,IAAOK,YAArB,SAAmCX,IACnC,4BAAIC,IACJ,4BAAIC,OAGN,qBAAIG,UAAWC,IAAOM,YAAtB,UACE,qBAAiBP,UAAWC,IAAOO,YAAnC,UACE,6CACA,sBAAMR,UAAWC,IAAOQ,gBAAxB,SAA0CV,EAAMW,cAFzC,QAIT,+BACE,yCACA,sBAAMV,UAAWC,IAAOQ,gBAAxB,SAA0CV,EAAMY,UAFzC,QAIT,+BACE,yCACA,sBAAMX,UAAWC,IAAOQ,gBAAxB,SAA0CV,EAAMa,UAFzC,e,uBCxBAC,MAPf,WACE,IAAIC,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBC,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACtB,MAAO,IAAMH,EAAEM,SAAS,IAAMF,EAAEE,SAAS,IAAMD,EAAEC,SAAS,KC4B5DC,SAASC,aAAe,CACtBvB,MAAO,IAGMwB,MAhCS,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,MAAV,OACtB,0BAASxB,UAAWC,IAAOwB,WAA3B,UACGD,GAAS,oBAAIxB,UAAWC,IAAOuB,MAAtB,0BAEV,oBAAIxB,UAAWC,IAAOyB,SAAtB,SACG3B,EAAM4B,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,GAAtB,OACT,qBAEE9B,UAAWC,IAAO8B,KAClBC,MAAO,CAAEC,gBAAiBpB,KAH5B,UAKE,sBAAMb,UAAWC,IAAO2B,MAAxB,SAAgCA,IAChC,uBAAM5B,UAAWC,IAAO4B,WAAxB,UAAqCA,EAArC,SALKC,Y,uBCRTI,EAAiB,SAAC,GAAD,SAAGC,QAChBR,KACN,gBACEG,EADF,EACEA,GACAM,EAFF,EAEEA,SAFF,IAGEtC,cAHF,MAGW,kEAHX,EAIEH,EAJF,EAIEA,KAJF,OAME,qBAAIK,UAAWC,IAAO8B,KAAtB,UACGK,EACC,sBAAMpC,UAAWC,IAAOoC,SAExB,sBAAMrC,UAAWC,IAAOqC,cAG1B,yBACA,qBAAKtC,UAAWC,IAAOH,OAAQM,IAAKN,EAAQO,IAAI,GAAGkC,MAAM,OACzD,mBAAGvC,UAAWC,IAAON,KAArB,SAA4BA,MATGmC,OAwBvCI,EAAeZ,aAAe,CAC5Ba,QAAS,IAGID,QC7BAC,EARC,gBAAGA,EAAH,EAAGA,QAAH,OACd,8BACE,6BACE,cAAC,EAAD,CAAgBA,QAASA,S,wBCFzBK,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,wBAAOzC,UAAWC,IAAOuC,mBAAzB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGC,EAAMd,KAAI,gBAAGe,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,SAAUd,EAA3B,EAA2BA,GAA3B,OACT,+BACE,6BAAKY,IACL,6BAAKC,IACL,6BAAKC,MAHEd,YAoBjBU,EAAmBlB,aAAe,CAChCmB,MAAO,IAGMD,Q,QCUAK,MAnCf,WACE,OACE,gCACE,gCACE,8EACA,cAAC,EAAD,CACElD,KAAMmD,EAAgBnD,KACtBC,IAAKkD,EAAgBlD,IACrBC,SAAUiD,EAAgBjD,SAC1BC,OAAQgD,EAAgBhD,OACxBC,MAAO+C,EAAgB/C,WAG3B,gCACE,8EACA,8BACE,cAACgD,EAAD,CAAYvB,MAAM,eAAezB,MAAOwB,SAG5C,gCACE,8EACA,8BACE,cAACyB,EAAD,CAAYb,QAASA,SAGzB,gCACE,8EACA,8BACE,cAAC,EAAD,CAAoBM,MAAOQ,aC9BtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuB9B,UACxC,6BAAqB+B,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72f2ce95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2sa69\",\"profileList\":\"Profile_profileList__1FKM4\",\"profileListSpam\":\"Profile_profileListSpam__3oOYa\",\"descriptioImg\":\"Profile_descriptioImg__2kh27\",\"profileName\":\"Profile_profileName__1bX74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"statisticalData_statList__3XDVI\",\"item\":\"statisticalData_item__3F5YL\",\"label\":\"statisticalData_label__1KgsJ\",\"percentage\":\"statisticalData_percentage__21PBq\",\"title\":\"statisticalData_title__gJ4Lv\",\"statistics\":\"statisticalData_statistics__3UFy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"friends_item__2qWjI\",\"avatar\":\"friends_avatar__2wLcY\",\"name\":\"friends_name__3ERN0\",\"status\":\"friends_status__1UIHA\",\"statusFalse\":\"friends_statusFalse__2w2GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__3ZvFA\",\"odd-row\":\"TransactionHistory_odd-row__1gBYE\",\"first\":\"TransactionHistory_first__REYoz\",\"last\":\"TransactionHistory_last__StBPr\"};","import styles from \"./Profile.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Profile = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar = \"http://rostov-gorod.ru/local/templates/markup/img/70_no-img.jpg\",\r\n  stats,\r\n}) => (\r\n  <div className={styles.profile}>\r\n    <div>\r\n      <img\r\n        className={styles.descriptioImg}\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n      />\r\n      <p className={styles.profileName}>{name}</p>\r\n      <p>{tag}</p>\r\n      <p>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.profileList}>\r\n      <li key={\"id-1\"} className={styles.profileItem}>\r\n        <span>Followers</span>\r\n        <span className={styles.profileListSpam}>{stats.followers}</span>\r\n      </li>\r\n      <li key={\"id-2\"}>\r\n        <span>Views</span>\r\n        <span className={styles.profileListSpam}>{stats.views}</span>\r\n      </li>\r\n      <li key={\"id-3\"}>\r\n        <span>Likes</span>\r\n        <span className={styles.profileListSpam}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\nexport default Profile;\r\n","function randColor() {\r\n  var r = Math.floor(Math.random() * 256),\r\n    g = Math.floor(Math.random() * 256),\r\n    b = Math.floor(Math.random() * 256);\r\n  return \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\r\n}\r\n\r\nexport default randColor;\r\n","import styles from \"./statisticalData.module.scss\";\r\nimport randColor from \"./randColor\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst statisticalData = ({ stats, title }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>Upload stats</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(({ label, percentage, id }) => (\r\n        <li\r\n          key={id}\r\n          className={styles.item}\r\n          style={{ backgroundColor: randColor() }}\r\n        >\r\n          <span className={styles.label}>{label}</span>\r\n          <span className={styles.percentage}>{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nstatisticalData.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\nFunction.defaultProps = {\r\n  stats: [],\r\n};\r\n\r\nexport default statisticalData;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./friends.module.scss\";\r\n\r\nconst FriendListItem = ({ friends }) =>\r\n  friends.map(\r\n    ({\r\n      id,\r\n      isOnline,\r\n      avatar = \"http://rostov-gorod.ru/local/templates/markup/img/70_no-img.jpg\",\r\n      name,\r\n    }) => (\r\n      <li className={styles.item} key={id}>\r\n        {isOnline ? (\r\n          <span className={styles.status}></span>\r\n        ) : (\r\n          <span className={styles.statusFalse}></span>\r\n        )}\r\n\r\n        <span></span>\r\n        <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n        <p className={styles.name}>{name}</p>\r\n      </li>\r\n    )\r\n  );\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nFriendListItem.defaultProps = {\r\n  friends: [],\r\n};\r\n\r\nexport default FriendListItem;\r\n","import FriendListItem from \"./FriendListItem\";\r\n\r\nconst friends = ({ friends }) => (\r\n  <div>\r\n    <ul>\r\n      <FriendListItem friends={friends} />\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default friends;\r\n","import styles from \"./TransactionHistory.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.TransactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ type, amount, currency, id }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nTransactionHistory.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import \"./App.css\";\n\nimport Profile from \"./Profile/Profile\";\nimport userinformation from \"./Profile/user.json\";\n\nimport Statistics from \"./Statistics/Statistics\";\nimport statisticalData from \"./Statistics/statistical-data.json\";\n\nimport FriendList from \"./FriendList/FriendList\";\nimport friends from \"./FriendList/friendList.json\";\n\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\nimport transactions from \"./TransactionHistory/transaction-history.json\";\n\nfunction App() {\n  return (\n    <div>\n      <div>\n        <h2>задание 1</h2>\n        <Profile\n          name={userinformation.name}\n          tag={userinformation.tag}\n          location={userinformation.location}\n          avatar={userinformation.avatar}\n          stats={userinformation.stats}\n        />\n      </div>\n      <div>\n        <h2>задание 2</h2>\n        <div>\n          <Statistics title=\"Upload stats\" stats={statisticalData} />\n        </div>\n      </div>\n      <div>\n        <h2>задание 3</h2>\n        <div>\n          <FriendList friends={friends} />\n        </div>\n      </div>\n      <div>\n        <h2>задание 4</h2>\n        <div>\n          <TransactionHistory items={transactions} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}